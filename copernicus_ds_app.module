<?php

use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\DataCommand;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\node\NodeInterface;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Site\Settings;

/**
 * Implements hook_theme().
 */
function copernicus_ds_app_theme() {
  return [
    'paragraph__embed_data_store_app__default' => [
      'template' => 'paragraph--embed-data-store-app--default',
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * hook_field_widget_single_element_WIDGET_TYPE_form_alter
 */
function copernicus_ds_app_field_widget_single_element_paragraphs_form_alter(
  &$element, &$form_state, $context
) {
  if ($element['#paragraph_type'] == 'embed_data_store_app') {
    $element['subform']['field_ds_app_link']['widget'][0]['value']['#attributes']['readonly'] = 'readonly';
    $element['subform']['field_ds_app_link']['widget'][0]['value']['#required'] = FALSE;
    $element['subform']['field_ds_app_link']['widget'][0]['value']['#size'] = 80;
    $element['subform']['field_ds_app_slug']['widget'][0]['value']['#size'] = 80;
    $element['subform']['field_ds_app_slug']['widget'][0]['value']['#ajax'] = [
      'callback' => '_copernicus_ds_app_ajax',
      'event' => 'change',
      'method' => 'replace',
      'wrapper' => 'my-wrapper',
      'progress' => [
        'type' => 'throbber',
        'message' => new TranslatableMarkup('Updating configuration ...'),
      ],
    ];

    $element['subform']['field_ds_config_json']['widget'][0]['value']['#rows'] = 10;
  }
}

/**
 * Implements hook_field_widget_single_element_WIDGET_TYPE_form_alter().
 */
function copernicus_ds_app_field_widget_single_element_entity_reference_paragraphs_form_alter(
  &$element, &$form_state, $context
) {
  if ($element['#paragraph_type'] == 'embed_data_store_app') {
    $element['subform']['field_ds_app_link']['widget'][0]['value']['#attributes']['readonly'] = 'readonly';
    $element['subform']['field_ds_app_link']['widget'][0]['value']['#required'] = FALSE;
    $element['subform']['field_ds_app_link']['widget'][0]['value']['#size'] = 80;
    $element['subform']['field_ds_app_slug']['widget'][0]['value']['#size'] = 80;
    $element['subform']['field_ds_app_slug']['widget'][0]['value']['#ajax'] = [
      'callback' => '_copernicus_ds_app_ajax',
      'event' => 'change',
      'method' => 'replace',
      'wrapper' => 'my-wrapper',
      'progress' => [
        'type' => 'throbber',
        'message' => new TranslatableMarkup('Updating configuration ...'),
      ],
    ];

    $element['subform']['field_ds_config_json']['widget'][0]['value']['#rows'] = 10;
  }
}

/**
 * ajax callback
 */
function _copernicus_ds_app_ajax(&$form, &$form_state) {
  $workflow_url = Settings::get('cds_app_base_url', 'https://cds.climate.copernicus.eu') . Settings::get('cds_app_workflow_path', '/workflows/c3s/');

  $element = $form_state->getTriggeringElement();
  $parent_elm = $element['#parents'][0];
  $parent_delta = $element['#parents'][1];
  $slug_input_value = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_ds_app_slug']['widget'][0]['value']['#value'];
  $link_input_name = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_ds_app_link']['widget'][0]['value']['#name'];
  $link_input_value = $workflow_url . $slug_input_value . '/master/configuration.json';
  $json_input_name = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_ds_config_json']['widget'][0]['value']['#name'];

  // TODO: generic solution for nested paragraphs containing ds app
  if (
    isset($element['#parents'][3]) &&
    $element['#parents'][3] == 'field_column_1'
  ) {
    $nested_parent_delta = $element['#parents'][4];
    $slug_input_value = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_column_1']['widget'][$nested_parent_delta]['subform']['field_ds_app_slug']['widget'][0]['value']['#value'];
    $link_input_name = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_column_1']['widget'][$nested_parent_delta]['subform']['field_ds_app_link']['widget'][0]['value']['#name'];
    $link_input_value = $workflow_url . $slug_input_value . '/master/configuration.json';
    $json_input_name = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_column_1']['widget'][$nested_parent_delta]['subform']['field_ds_config_json']['widget'][0]['value']['#name'];
  }
  if (
    isset($element['#parents'][3]) &&
    $element['#parents'][3] == 'field_column_2'
  ) {
    $nested_parent_delta = $element['#parents'][4];
    $slug_input_value = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_column_2']['widget'][$nested_parent_delta]['subform']['field_ds_app_slug']['widget'][0]['value']['#value'];
    $link_input_name = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_column_2']['widget'][$nested_parent_delta]['subform']['field_ds_app_link']['widget'][0]['value']['#name'];
    $link_input_value = $workflow_url . $slug_input_value . '/master/configuration.json';
    $json_input_name = $form[$parent_elm]['widget'][$parent_delta]['subform']['field_column_2']['widget'][$nested_parent_delta]['subform']['field_ds_config_json']['widget'][0]['value']['#name'];
  }

  $response = new AjaxResponse();
  $response->addCommand(new InvokeCommand(
    'input[name="' . $link_input_name . '"]',
    'val',
    [$link_input_value]
  ));
  $json_string = @file_get_contents($link_input_value);
  $test_json = json_decode($json_string);
  if (json_last_error() !== JSON_ERROR_NONE) {
    $json_string = 'JSON Error';
  }
  $response->addCommand(new InvokeCommand(
    'textarea[name="' . $json_input_name . '"]',
    'text',
    [$json_string]
  ));

  return $response;
}

// Note: this only works for first paragraph (load behavior once)
// /**
//  * Implements hook_preprocess_paragraph().
//  */
// function copernicus_ds_app_preprocess_paragraph(&$variables) {
//   $paragraph = $variables['elements']['#paragraph'];
//   if (isset($variables['elements']['field_ds_config_json'])) {
//     $variables['#attached']['library'][] = 'copernicus_ds_app/ds_app';
//     $variables['#attached']['drupalSettings']['cds_app_base_url'] = Settings::get('data_store_base_url', 'https://cds.climate.copernicus.eu');
//     $variables['#attached']['drupalSettings']['ds_app_paragraphs'][] = $paragraph->uuid();
//    }
// }

/**
 * Implements hook_preprocess_node().
 */
function copernicus_ds_app_preprocess_node(&$variables) {
  $node = $variables['elements']['#node'];
  $load_ds_toolkit = FALSE;

  foreach($variables['elements'] as $elm){
    if (
      is_array($elm) &&
      isset($elm['#field_type']) &&
      $elm['#field_type'] == 'entity_reference_revisions'
    ) {
      foreach($elm as $key => $item) {
        // embed ds paragraph into content field
        if (
          is_numeric($key) &&
          isset($elm[$key]['#paragraph']) &&
          $elm[$key]['#paragraph']->bundle() == 'embed_data_store_app'
        ) {
          $load_ds_toolkit = TRUE;
          $variables['#attached']['drupalSettings']['ds_app_paragraphs'][] =
            $elm[$key]['#paragraph']->uuid();
        }
        // embed ds paragraph into two_column_layout paragraph (hardcoded)
        if (
          is_numeric($key) &&
          isset($elm[$key]['#paragraph']) &&
          $elm[$key]['#paragraph']->bundle() == 'two_column_layout'
        ) {
          if ($column_elements =
            array_merge(
              $elm[$key]['#paragraph']->get('field_column_1')->getValue(),
              $elm[$key]['#paragraph']->get('field_column_2')->getValue()
            )
          ) {
            foreach($column_elements as $item){
              $target_id = $item['target_id'];
              $nested_paragraph = Paragraph::load($target_id);
              if ($nested_paragraph && $nested_paragraph->bundle() == 'embed_data_store_app') {
                $load_ds_toolkit = TRUE;
                $variables['#attached']['drupalSettings']['ds_app_paragraphs'][] =
                  $nested_paragraph->uuid();
              }
            }
          }
        }
      }
    }
  }

  if ($load_ds_toolkit) {
    $variables['#attached']['library'][] = 'copernicus_ds_app/ds_app';
    $variables['#attached']['drupalSettings']['cds_app_base_url'] =
      Settings::get('cds_app_base_url', 'https://cds.climate.copernicus.eu');
  }
}
